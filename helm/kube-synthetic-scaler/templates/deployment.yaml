apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}
      annotations:
        {{- range $key, $value := .Values.deployment.annotations }}
          {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if .Values.securityContext }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount }}
      automountServiceAccountToken: true
      containers:
        - command:
            - /manager
            - -scaling-signal-annotation
            - "{{ .Values.reconcilerFlags.scalingSignalAnnotation }}"
            - -scaling-duration-annotation
            - "{{ .Values.reconcilerFlags.scalingDurationAnnotation }}"
            - -last-update-time-annotation
            - "{{ .Values.reconcilerFlags.lastUpdateTimeAnnotation }}"
            - -replica-count-annotation
            - "{{ .Values.reconcilerFlags.scaleUpReplicaCountAnnotation }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          name: {{ .Values.containername }}
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          {{- if (eq (toString .Values.livenessprobe.enabled) "true") }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.livenessprobe.port }}
            initialDelaySeconds: {{ .Values.livenessprobe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessprobe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessprobe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessprobe.successThreshold }}
            failureThreshold: {{ .Values.livenessprobe.failureThreshold }}
          {{- end }}
        {{- if .Values.sidecars }}
{{ toYaml .Values.sidecars | indent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: 10
